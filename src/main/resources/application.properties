
server.port=${server.port}
eureka.client.service-url.defaultZone = http://192.180.2.127:8761/eureka/

server.servlet.context-path=/api/v1/rating-service
spring.application.name=rating-service

#Database config
spring.datasource.url=${db_url}
spring.datasource.username=${db_username}
spring.datasource.password=${db_password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

#ActuatoeConfig
management.endpoints.web.base-path=/api/v1/rating-service/actuator
management.endpoints.web.exposure.include=*

# KAFKA --
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.ack-mode=MANUAL
spring.kafka.consumer.bootstrap-servers=192.180.2.127:9092,192.180.2.127:9093

# Maximum number of records to poll in one poll() operation
spring.kafka.consumer.max-poll-records=100

# Enable batch listener
spring.kafka.listener.type=batch

# Configuration for new-rating-events topic
spring.kafka.consumer.properties.create-rating.group-id=_create
spring.kafka.consumer.properties.create-rating.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.properties.create-rating.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=org.springframework.kafka.support.serializer.JsonDeserializer

# Configuration for update-rating-events topic
spring.kafka.consumer.properties.update-rating.group-id=_update
spring.kafka.consumer.properties.update-rating.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.properties.update-rating.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer




